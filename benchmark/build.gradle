plugins {
    id 'java'
    id "io.freefair.lombok"
    id 'jacoco'
}

repositories {
    mavenCentral()
}

configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

dependencies {
    // https://github.com/google/guava/wiki/CVE-2018-10237
    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    compile group: 'org.elasticsearch', name: 'elasticsearch-x-content', version: "${es_version}"
    compile group: 'org.json', name: 'json', version: '20180813'
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '5.2.5.RELEASE'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile group: 'org.jfree', name: 'jfreechart', version: '1.0.19'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
    compile group: 'org.apache.httpcomponents', name:'httpclient', version:'4.5.10'
    compile group: 'com.datastax.cassandra', name:'cassandra-driver-core', version:'3.10.0'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.14'

    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '2.1'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.5.0'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.5.0'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
    // Exclude for general test runs; can still be run with specific command.
    exclude '**/BenchmarkService.class'
}

clean.doFirst {
    // Clear data directory for future runs
    file('data').deleteDir()
}

jacoco {
    toolVersion = "0.8.5"
}
jacocoTestReport {
    reports {
        html.enabled true
    }
}
test.finalizedBy(project.tasks.jacocoTestReport)
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 1.0
            }
            limit {
                counter = 'BRANCH'
                minimum = 1.0
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification