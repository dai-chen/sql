{
  "summary": {
    "total": 220,
    "success": 43,
    "failure": 177
  },
  "tests": [
    {
      "result": "Failed",
      "reason": "No other databases support this query: Column \"KIBANA_SAMPLE_DATA_FLIGHTS.ORIGINWEATHER\" must be in the GROUP BY list; SQL statement:\nSELECT SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024) AS `OriginWeather` FROM `kibana_sample_data_flights` GROUP BY 1 [90016-200];[SQLITE_ERROR] SQL error or missing database (no such function: SUBSTRING);",
      "id": 1,
      "sql": "SELECT SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024) AS `OriginWeather` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(FlightDelayMin)",
      "id": 2,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`FlightDelayMin`) AS `sum_Offset_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [SUM] cannot work with [BOOLEAN]. Usage: SUM(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 3,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`FlightDelay`) AS `sum_FlightDelay_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(DistanceMiles)",
      "id": 4,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`DistanceMiles`) AS `sum_DistanceMiles_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Column \"KIBANA_SAMPLE_DATA_FLIGHTS.TIMESTAMP\" must be in the GROUP BY list; SQL statement:\nSELECT YEAR(`kibana_sample_data_flights`.`timestamp`) AS `yr_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1 [90016-200];[SQLITE_ERROR] SQL error or missing database (no such function: YEAR);",
      "id": 5,
      "sql": "SELECT YEAR(`kibana_sample_data_flights`.`timestamp`) AS `yr_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(abs_1=def abs_1 = Math.abs(doc['dayOfWeek'].value))",
      "id": 6,
      "sql": "SELECT SUM(ABS(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(acos_1=def acos_1 = Math.acos(doc['dayOfWeek'].value))",
      "id": 7,
      "sql": "SELECT SUM(ACOS(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252358221825_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(asin_1=def asin_1 = Math.asin(doc['dayOfWeek'].value))",
      "id": 8,
      "sql": "SELECT SUM(ASIN(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252358545410_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(atan_1=def atan_1 = Math.atan(doc['dayOfWeek'].value))",
      "id": 9,
      "sql": "SELECT SUM(ATAN(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252358811651_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(atan2_1=def atan2_1 = Math.atan2(doc['dayOfWeek'].value, doc['FlightDelayMin'].value))",
      "id": 10,
      "sql": "SELECT SUM(ATAN2(`kibana_sample_data_flights`.`dayOfWeek`,`kibana_sample_data_flights`.`FlightDelayMin`)) AS `sum_Calculation_160722252358811651_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 11,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(cos_1=def cos_1 = Math.cos(doc['dayOfWeek'].value))",
      "id": 12,
      "sql": "SELECT SUM(COS(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(cot_1=def cot_1 = 1 / Math.tan(doc['dayOfWeek'].value))",
      "id": 13,
      "sql": "SELECT SUM(COT(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(degrees_1=def degrees_1 = Math.toDegrees(doc['dayOfWeek'].value))",
      "id": 14,
      "sql": "SELECT SUM(DEGREES(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"syntax error, expect RPAREN, actual IDENTIFIER DIV\",\n    \"type\": \"ParserException\"\n  },\n  \"status\": 400\n}",
      "id": 15,
      "sql": "SELECT SUM((`kibana_sample_data_flights`.`dayOfWeek` DIV `kibana_sample_data_flights`.`FlightDelayMin`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(exp_1=def exp_1 = Math.exp(doc['dayOfWeek'].value))",
      "id": 16,
      "sql": "SELECT SUM(EXP(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 17,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [ROUND] cannot work with [FLOAT, INTEGER]. Usage: ROUND(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 18,
      "sql": "SELECT SUM((((CASE WHEN (ABS((`kibana_sample_data_flights`.`FlightDelayMin`) - (ROUND( ( (`kibana_sample_data_flights`.`FlightDelayMin`) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((`kibana_sample_data_flights`.`dayOfWeek`) - (ROUND( ( (`kibana_sample_data_flights`.`dayOfWeek`) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN 1.5 ELSE 0.0 END) - (CASE WHEN ((`kibana_sample_data_flights`.`dayOfWeek`) - (ROUND( ( (`kibana_sample_data_flights`.`dayOfWeek`) / 3.0 ), 0 ) * 3.0) < 0.0) AND ((CASE WHEN (ABS((`kibana_sample_data_flights`.`FlightDelayMin`) - (ROUND( ( (`kibana_sample_data_flights`.`FlightDelayMin`) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((`kibana_sample_data_flights`.`dayOfWeek`) - (ROUND( ( (`kibana_sample_data_flights`.`dayOfWeek`) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) > 0.0) THEN 3.0 ELSE 0.0 END)) + (ROUND( ( (`kibana_sample_data_flights`.`dayOfWeek`) / 3.0 ), 0 ) * 3.0))) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [ROUND] cannot work with [FLOAT, INTEGER]. Usage: ROUND(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 19,
      "sql": "SELECT SUM(ROUND( (((CASE WHEN (ABS((`kibana_sample_data_flights`.`FlightDelayMin`) - (ROUND( ( (`kibana_sample_data_flights`.`FlightDelayMin`) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((`kibana_sample_data_flights`.`dayOfWeek`) - (ROUND( ( (`kibana_sample_data_flights`.`dayOfWeek`) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) - (CASE WHEN ((`kibana_sample_data_flights`.`FlightDelayMin`) - (ROUND( ( (`kibana_sample_data_flights`.`FlightDelayMin`) / SQRT(3.0) ), 0 ) * SQRT(3.0)) < 0.0) AND ((CASE WHEN (ABS((`kibana_sample_data_flights`.`FlightDelayMin`) - (ROUND( ( (`kibana_sample_data_flights`.`FlightDelayMin`) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((`kibana_sample_data_flights`.`dayOfWeek`) - (ROUND( ( (`kibana_sample_data_flights`.`dayOfWeek`) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) > 0.0) THEN SQRT(3.0) ELSE 0.0 END)) + (ROUND( ( (`kibana_sample_data_flights`.`FlightDelayMin`) / SQRT(3.0) ), 0 ) * SQRT(3.0))), 3)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(ln_1=def ln_1 = Math.log(doc['dayOfWeek'].value))",
      "id": 20,
      "sql": "SELECT SUM(LOG(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(divide_1=def ln_1 = Math.log(doc['dayOfWeek'].value);def ln_2 = Math.log(10); if( ln_1 instanceof String) ln_1= Double.parseDouble(ln_1);  if( ln_2 instanceof String) ln_2= Double.parseDouble(ln_2); def divide_1 = ln_1 / ln_2)",
      "id": 21,
      "sql": "SELECT SUM((LOG(`kibana_sample_data_flights`.`dayOfWeek`)/LOG(10))) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MAX(dayOfWeek)",
      "id": 22,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`dayOfWeek`) AS `usr_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MIN(dayOfWeek)",
      "id": 23,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`dayOfWeek`) AS `usr_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"could not parse sqlBinaryOpExpr need to be identifier/valuable gotclass com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr with value:POWER(dayOfWeek, 2)\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 24,
      "sql": "SELECT SUM((CASE WHEN `kibana_sample_data_flights`.`dayOfWeek` >= 0 OR FLOOR(2) = 2 THEN POWER(`kibana_sample_data_flights`.`dayOfWeek`,2) END)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(radians_1=def radians_1 = Math.toRadians(doc['dayOfWeek'].value))",
      "id": 25,
      "sql": "SELECT SUM(RADIANS(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(round_1=def round_1 = Math.round(doc['dayOfWeek'].value))",
      "id": 26,
      "sql": "SELECT SUM(ROUND(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(signum_1=def signum_1 = Math.signum(doc['dayOfWeek'].value))",
      "id": 27,
      "sql": "SELECT SUM(SIGN(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(sin_1=def sin_1 = Math.sin(doc['dayOfWeek'].value))",
      "id": 28,
      "sql": "SELECT SUM(SIN(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(sqrt_1=def sqrt_1 = Math.sqrt(doc['dayOfWeek'].value))",
      "id": 29,
      "sql": "SELECT SUM(SQRT(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(pow_1=def pow_1 = Math.pow(doc['dayOfWeek'].value, 2))",
      "id": 30,
      "sql": "SELECT SUM(POWER(`kibana_sample_data_flights`.`dayOfWeek`, 2)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(tan_1=def tan_1 = Math.tan(doc['dayOfWeek'].value))",
      "id": 31,
      "sql": "SELECT SUM(TAN(`kibana_sample_data_flights`.`dayOfWeek`)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 32,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [SUM] cannot work with [KEYWORD]. Usage: SUM(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 33,
      "sql": "SELECT SUM(ASCII(SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024))) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 34,
      "sql": "SELECT `kibana_sample_data_flights`.`Dest` AS `Dest` FROM `kibana_sample_data_flights` WHERE ((`kibana_sample_data_flights`.`Dest` = 'caching_sha2_password') AND (LOCATE('in',LOWER(`kibana_sample_data_flights`.`Dest`)) > 0)) GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 35,
      "sql": "SELECT SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024) AS `OriginWeather` FROM `kibana_sample_data_flights` WHERE (RIGHT(RTRIM(LOWER(SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024))), LENGTH('.')) = '.') GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [GREATEST] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 36,
      "sql": "SELECT SUM(IF(ISNULL(1), NULL, LOCATE('Cape',`kibana_sample_data_flights`.`Origin`,GREATEST(1,FLOOR(1))))) AS `sum_Calculation_462181953493630977_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"could not parse sqlBinaryOpExpr need to be identifier/valuable gotclass com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr with value:LEFT(Origin, 3)\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 37,
      "sql": "SELECT (CASE WHEN 3 >= 0 THEN LEFT(`kibana_sample_data_flights`.`Origin`,3) ELSE NULL END) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 38,
      "sql": "SELECT LENGTH(`kibana_sample_data_flights`.`Origin`) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 39,
      "sql": "SELECT LOWER(`kibana_sample_data_flights`.`Origin`) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 40,
      "sql": "SELECT LTRIM(`kibana_sample_data_flights`.`Origin`) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MAX] cannot work with [KEYWORD]. Usage: MAX(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 41,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`Origin`) AS `usr_Calculation_462181953493630977_nk` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [GREATEST] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 42,
      "sql": "SELECT IF(ISNULL(0), NULL, SUBSTRING(`kibana_sample_data_flights`.`Origin`,GREATEST(1,FLOOR(0)),FLOOR(5))) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MIN] cannot work with [KEYWORD]. Usage: MIN(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 43,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`Origin`) AS `usr_Calculation_462181953493630977_nk` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 44,
      "sql": "SELECT REPLACE(`kibana_sample_data_flights`.`Origin`,'Airport','') AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"could not parse sqlBinaryOpExpr need to be identifier/valuable gotclass com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr with value:RIGHT(Origin, 3)\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 45,
      "sql": "SELECT (CASE WHEN 3 >= 0 THEN RIGHT(`kibana_sample_data_flights`.`Origin`,3) ELSE NULL END) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 46,
      "sql": "SELECT RTRIM(`kibana_sample_data_flights`.`Origin`) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [SPACE] cannot be found or used here. Did you mean [REPLACE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 47,
      "sql": "SELECT IF(`kibana_sample_data_flights`.`AvgTicketPrice` >= 0, SPACE(FLOOR(`kibana_sample_data_flights`.`AvgTicketPrice`)), NULL) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol ['-'] at: 'SELECT TRIM(LEADING '-'' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 48,
      "sql": "SELECT TRIM(LEADING '-' FROM TRIM(LEADING SUBSTRING_INDEX(`kibana_sample_data_flights`.`Origin`, '-', (2 - 1)) FROM SUBSTRING_INDEX(`kibana_sample_data_flights`.`Origin`, '-', 2))) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 49,
      "sql": "SELECT SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024) AS `OriginWeather` FROM `kibana_sample_data_flights` WHERE (LEFT(LTRIM(LOWER(SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024))), LENGTH('$')) = '$') GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 50,
      "sql": "SELECT TRIM(`kibana_sample_data_flights`.`Origin`) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 51,
      "sql": "SELECT UPPER(`kibana_sample_data_flights`.`Origin`) AS `Calculation_462181953493630977` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [0] at: 'SELECT ADDDATE( DATE_FORMAT( DATE(`kibana_sample_data_flights`.`password_last_changed`), '%Y-01-01 00:00:00' ), INTERVAL 0' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 52,
      "sql": "SELECT ADDDATE( DATE_FORMAT( DATE(`kibana_sample_data_flights`.`password_last_changed`), '%Y-01-01 00:00:00' ), INTERVAL 0 SECOND ) AS `tyr_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 53,
      "sql": "SELECT YEAR(DATE(`kibana_sample_data_flights`.`timestamp`)) AS `yr_Calculation_462181953481519104_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 54,
      "sql": "SELECT (YEAR(`kibana_sample_data_flights`.`timestamp`) - YEAR(DATE('1990-01-01'))) AS `Calculation_1706301351891775489` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Column \"KIBANA_SAMPLE_DATA_FLIGHTS.TIMESTAMP\" must be in the GROUP BY list; SQL statement:\nSELECT MONTHNAME(`kibana_sample_data_flights`.`timestamp`) AS `Calculation_1706301351891775489` FROM `kibana_sample_data_flights` GROUP BY 1 [90016-200];[SQLITE_ERROR] SQL error or missing database (no such function: MONTHNAME);",
      "id": 55,
      "sql": "SELECT MONTHNAME(`kibana_sample_data_flights`.`timestamp`) AS `Calculation_1706301351891775489` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [STR_TO_DATE] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 56,
      "sql": "SELECT YEAR(TIMESTAMP(STR_TO_DATE('5.April.2004', '%d.%i.%Y'))) AS `yr_Calculation_462181953481519104_ok` FROM `kibana_sample_data_flights`"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [-1] at: 'SELECT YEAR(ADDDATE( CONCAT( DATE_FORMAT( `kibana_sample_data_flights`.`timestamp`, '%Y-' ), (3*(QUARTER(`kibana_sample_data_flights`.`timestamp`)-1' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 57,
      "sql": "SELECT YEAR(ADDDATE( CONCAT( DATE_FORMAT( `kibana_sample_data_flights`.`timestamp`, '%Y-' ), (3*(QUARTER(`kibana_sample_data_flights`.`timestamp`)-1)+1), '-01 00:00:00' ), INTERVAL 0 SECOND )) AS `yr_Calculation_1706301351891775489_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Column \"KIBANA_SAMPLE_DATA_FLIGHTS.TIMESTAMP\" must be in the GROUP BY list; SQL statement:\nSELECT DAYOFMONTH(`kibana_sample_data_flights`.`timestamp`) AS `Calculation_462181953481519104` FROM `kibana_sample_data_flights` GROUP BY 1 [90016-200];[SQLITE_ERROR] SQL error or missing database (no such function: DAYOFMONTH);",
      "id": 58,
      "sql": "SELECT DAYOFMONTH(`kibana_sample_data_flights`.`timestamp`) AS `Calculation_462181953481519104` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "yr_Calculation_462181953481519104_ok",
              "type": "double"
            }],
            "dataRows": [[2019]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "YR_CALCULATION_462181953481519104_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[2019]]
          }
        }
      ],
      "id": 59,
      "sql": "SELECT 2019 AS `yr_Calculation_462181953481519104_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [DATE] at: 'SELECT YEAR(ADDTIME(CAST(CAST(`kibana_sample_data_flights`.`timestamp` AS DATE' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 60,
      "sql": "SELECT YEAR(ADDTIME(CAST(CAST(`kibana_sample_data_flights`.`timestamp` AS DATE) AS DATETIME), TIME(`kibana_sample_data_flights`.`timestamp`))) AS `yr_Calculation_1706301351891775489_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 61,
      "sql": "SELECT YEAR(MAKETIME(`kibana_sample_data_flights`.`dayOfWeek`, `kibana_sample_data_flights`.`dayOfWeek`, `kibana_sample_data_flights`.`dayOfWeek`)) AS `yr_Calculation_1706301351891775489_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MAX] cannot work with [DATE]. Usage: MAX(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 62,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`timestamp`) AS `max_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MIN] cannot work with [DATE]. Usage: MIN(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 63,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`timestamp`) AS `min_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Column \"KIBANA_SAMPLE_DATA_FLIGHTS.TIMESTAMP\" must be in the GROUP BY list; SQL statement:\nSELECT MONTH(`kibana_sample_data_flights`.`timestamp`) AS `mn_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1 [90016-200];[SQLITE_ERROR] SQL error or missing database (no such function: MONTH);",
      "id": 64,
      "sql": "SELECT MONTH(`kibana_sample_data_flights`.`timestamp`) AS `mn_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 65,
      "sql": "SELECT YEAR(NOW()) AS `yr_Calculation_462181953481519104_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 66,
      "sql": "SELECT YEAR(CURDATE()) AS `yr_Calculation_462181953481519104_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Column \"KIBANA_SAMPLE_DATA_FLIGHTS.TIMESTAMP\" must be in the GROUP BY list; SQL statement:\nSELECT YEAR(`kibana_sample_data_flights`.`timestamp`) AS `yr_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1 [90016-200];[SQLITE_ERROR] SQL error or missing database (no such function: YEAR);",
      "id": 67,
      "sql": "SELECT YEAR(`kibana_sample_data_flights`.`timestamp`) AS `yr_timestamp_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"AND is not support\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 68,
      "sql": "SELECT ((`kibana_sample_data_flights`.`Origin` = 'Frankfurt am Main Airport') AND (`kibana_sample_data_flights`.`Dest` = 'Sydney Kingsford Smith International Airport')) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"\",\n    \"type\": \"NullPointerException\"\n  },\n  \"status\": 400\n}",
      "id": 69,
      "sql": "SELECT (CASE `kibana_sample_data_flights`.`OriginWeather` WHEN 'Sunny' THEN '1' WHEN 'Rain' THEN '0' ELSE 'NA' END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [CHAR] at: 'SELECT (CASE WHEN (`kibana_sample_data_flights`.`FlightDelay` = 0) THEN 'No delay' ELSE CAST(NULL AS CHAR' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 70,
      "sql": "SELECT (CASE WHEN (`kibana_sample_data_flights`.`FlightDelay` = 0) THEN 'No delay' ELSE CAST(NULL AS CHAR(1)) END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [CHAR] at: 'SELECT (CASE WHEN (`kibana_sample_data_flights`.`FlightDelay` = 0) THEN 'No delay' WHEN (`kibana_sample_data_flights`.`FlightDelay` = 1) THEN 'Delay' ELSE CAST(NULL AS CHAR' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 71,
      "sql": "SELECT (CASE WHEN (`kibana_sample_data_flights`.`FlightDelay` = 0) THEN 'No delay' WHEN (`kibana_sample_data_flights`.`FlightDelay` = 1) THEN 'Delay' ELSE CAST(NULL AS CHAR(1)) END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"= is not support\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 72,
      "sql": "SELECT (RIGHT(RTRIM(`kibana_sample_data_flights`.`Origin`), LENGTH('Airport')) = 'Airport') AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [CHAR] at: 'SELECT (CASE WHEN (`kibana_sample_data_flights`.`FlightDelay` = 0) THEN 'No delay' ELSE CAST(NULL AS CHAR' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 73,
      "sql": "SELECT (CASE WHEN (`kibana_sample_data_flights`.`FlightDelay` = 0) THEN 'No delay' ELSE CAST(NULL AS CHAR(1)) END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 74,
      "sql": "SELECT IFNULL(`kibana_sample_data_flights`.`Cancelled`, `kibana_sample_data_flights`.`AvgTicketPrice`) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"\",\n    \"type\": \"NullPointerException\"\n  },\n  \"status\": 400\n}",
      "id": 75,
      "sql": "SELECT (CASE WHEN (`kibana_sample_data_flights`.`AvgTicketPrice` > 500) THEN 'High' WHEN NOT (`kibana_sample_data_flights`.`AvgTicketPrice` > 500) THEN 'Low' ELSE NULL END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"unknown field name :  NOT ISNULL(DATE_FORMAT(Origin, '%Y'))\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 76,
      "sql": "SELECT (NOT ISNULL(DATE_FORMAT(`kibana_sample_data_flights`.`Origin`, '%Y'))) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Invalid parameter count for \"ISNULL\", expected count: \"1\"; SQL statement:\nSELECT ISNULL(`kibana_sample_data_flights`.`FlightNum`) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1 [7001-200];[SQLITE_ERROR] SQL error or missing database (near \"ISNULL\": syntax error);",
      "id": 77,
      "sql": "SELECT ISNULL(`kibana_sample_data_flights`.`FlightNum`) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MAX(dayOfWeek)",
      "id": 78,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`dayOfWeek`) AS `max_max_questions_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MIN(dayOfWeek)",
      "id": 79,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`dayOfWeek`) AS `min_max_questions_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"unknown field name :  NOT ISNULL(DATE_FORMAT(Origin, '%Y'))\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 80,
      "sql": "SELECT (NOT ISNULL(DATE_FORMAT(`kibana_sample_data_flights`.`Origin`, '%Y'))) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"OR is not support\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 81,
      "sql": "SELECT ((`kibana_sample_data_flights`.`Origin` = 'Frankfurt am Main Airport') OR (`kibana_sample_data_flights`.`Dest` = 'Sydney Kingsford Smith International Airport')) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"\",\n    \"type\": \"NullPointerException\"\n  },\n  \"status\": 400\n}",
      "id": 82,
      "sql": "SELECT (CASE WHEN (`kibana_sample_data_flights`.`AvgTicketPrice` > 500) THEN 'High' WHEN NOT (`kibana_sample_data_flights`.`AvgTicketPrice` > 500) THEN 'Low' ELSE NULL END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"\",\n    \"type\": \"NullPointerException\"\n  },\n  \"status\": 400\n}",
      "id": 83,
      "sql": "SELECT (CASE WHEN (`kibana_sample_data_flights`.`AvgTicketPrice` > 500) THEN 'High' WHEN NOT (`kibana_sample_data_flights`.`AvgTicketPrice` > 500) THEN 'Low' ELSE NULL END) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 84,
      "sql": "SELECT IFNULL(`kibana_sample_data_flights`.`FlightDelay`, 0) AS `Calculation_462181953506873347` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MIN] cannot work with [KEYWORD]. Usage: MIN(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 85,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`Origin`) AS `TEMP(Calculation_462181953504628738)(2376748618)(0)`,   MAX(`kibana_sample_data_flights`.`Origin`) AS `TEMP(Calculation_462181953504628738)(2968235173)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method AVG(FlightDelayMin)",
      "id": 86,
      "sql": "SELECT AVG(`kibana_sample_data_flights`.`FlightDelayMin`) AS `avg_max_user_connections_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(1)",
      "id": 87,
      "sql": "SELECT SUM(1) AS `cnt_max_user_connections_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field [kibana_sample_data_flights.max_questions] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 88,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`max_questions`) AS `max_max_questions_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MIN(dayOfWeek)",
      "id": 89,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`dayOfWeek`) AS `min_max_questions_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(multiply_1=def multiply_1 = doc['AvgTicketPrice'].value * doc['AvgTicketPrice'].value)",
      "id": 90,
      "sql": "SELECT SUM((`kibana_sample_data_flights`.`AvgTicketPrice` * `kibana_sample_data_flights`.`AvgTicketPrice`)) AS `TEMP(Calculation_462181953506873347)(1705728846)(0)`,   SUM(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(Calculation_462181953506873347)(2465277995)(0)`,   COUNT(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(Calculation_462181953506873347)(2633997250)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method COUNT(DistanceMiles)",
      "id": 91,
      "sql": "SELECT COUNT(`kibana_sample_data_flights`.`DistanceMiles`) AS `TEMP(Calculation_462181953506873347)(2070533874)(0)`,   SUM(`kibana_sample_data_flights`.`DistanceMiles`) AS `TEMP(Calculation_462181953506873347)(3496560911)(0)`,   SUM((`kibana_sample_data_flights`.`DistanceMiles` * `kibana_sample_data_flights`.`DistanceMiles`)) AS `TEMP(Calculation_462181953506873347)(3595387140)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 92,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `usr_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 93,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(Calculation_462181953506873347)(105357904)(0)`,   COUNT(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(Calculation_462181953506873347)(2584840543)(0)`,   SUM(((`kibana_sample_data_flights`.`dayOfWeek` + 0.0) * (`kibana_sample_data_flights`.`dayOfWeek` + 0.0))) AS `TEMP(Calculation_462181953506873347)(3340567470)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(DistanceKilometers)",
      "id": 94,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`DistanceKilometers`) AS `TEMP(Calculation_462181953506873347)(1474522238)(0)`,   COUNT(`kibana_sample_data_flights`.`DistanceKilometers`) AS `TEMP(Calculation_462181953506873347)(2841334535)(0)`,   SUM((`kibana_sample_data_flights`.`DistanceKilometers` * `kibana_sample_data_flights`.`DistanceKilometers`)) AS `TEMP(Calculation_462181953506873347)(461715975)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Success",
      "id": 95,
      "sql": "SELECT SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024) AS `OriginWeather` FROM `kibana_sample_data_flights` WHERE (SUBSTRING(`kibana_sample_data_flights`.`OriginWeather`, 1, 1024) = 'ABC') GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [ISNULL] at: 'SELECT SUM((CASE \\\\tWHEN ISNULL' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 96,
      "sql": "SELECT SUM((CASE \\tWHEN ISNULL(`kibana_sample_data_flights`.`dayOfWeek`) THEN NULL \\tWHEN ISNULL(10) THEN NULL \\tELSE GREATEST(`kibana_sample_data_flights`.`dayOfWeek`, 10) END)) AS `sum_Calculation_160722252357632000_ok` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [.] at: 'SELECT `kibana_sample_data_flights`.`AvgTicketPrice` AS `AvgTicketPrice`,   `kibana_sample_data_flights`.`Cancelled` AS `Cancelled`,   `kibana_sample_data_flights`.`Carrier` AS `Carrier`,   `kibana_sample_data_flights`.`DestAirportID` AS `DestAirportID`,   `kibana_sample_data_flights`.`DestCityName` AS `DestCityName`,   `kibana_sample_data_flights`.`DestCountry` AS `DestCountry`,   `kibana_sample_data_flights`.`DestLocation` AS `DestLocation`,   `kibana_sample_data_flights`.`DestRegion` AS `Dest~~~<<<query-trunc>>>~~~e`.' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 97,
      "sql": "SELECT `kibana_sample_data_flights`.`AvgTicketPrice` AS `AvgTicketPrice`,   `kibana_sample_data_flights`.`Cancelled` AS `Cancelled`,   `kibana_sample_data_flights`.`Carrier` AS `Carrier`,   `kibana_sample_data_flights`.`DestAirportID` AS `DestAirportID`,   `kibana_sample_data_flights`.`DestCityName` AS `DestCityName`,   `kibana_sample_data_flights`.`DestCountry` AS `DestCountry`,   `kibana_sample_data_flights`.`DestLocation` AS `DestLocation`,   `kibana_sample_data_flights`.`DestRegion` AS `Dest~~~<<<query-trunc>>>~~~e`.`kibana_sample_data_flights` AS `kibana_sample_data_flights` FROM `kibana_sample_data_ecommerce`   LEFT JOIN `kibana_sample_data_flights` ON (`kibana_sample_data_ecommerce`.`day_of_week_i` = `kibana_sample_data_flights`.`dayOfWeek`) LIMIT 1000"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [.] at: 'SELECT `kibana_sample_data_flights`.`AvgTicketPrice` AS `AvgTicketPrice`,   `kibana_sample_data_flights`.`Cancelled` AS `Cancelled`,   `kibana_sample_data_flights`.`Carrier` AS `Carrier`,   `kibana_sample_data_flights`.`DestAirportID` AS `DestAirportID`,   `kibana_sample_data_flights`.`DestCityName` AS `DestCityName`,   `kibana_sample_data_flights`.`DestCountry` AS `DestCountry`,   `kibana_sample_data_flights`.`DestLocation` AS `DestLocation`,   `kibana_sample_data_flights`.`DestRegion` AS `Dest~~~<<<query-trunc>>>~~~`.' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 98,
      "sql": "SELECT `kibana_sample_data_flights`.`AvgTicketPrice` AS `AvgTicketPrice`,   `kibana_sample_data_flights`.`Cancelled` AS `Cancelled`,   `kibana_sample_data_flights`.`Carrier` AS `Carrier`,   `kibana_sample_data_flights`.`DestAirportID` AS `DestAirportID`,   `kibana_sample_data_flights`.`DestCityName` AS `DestCityName`,   `kibana_sample_data_flights`.`DestCountry` AS `DestCountry`,   `kibana_sample_data_flights`.`DestLocation` AS `DestLocation`,   `kibana_sample_data_flights`.`DestRegion` AS `Dest~~~<<<query-trunc>>>~~~`.`kibana_sample_data_flights` AS `kibana_sample_data_flights` FROM `kibana_sample_data_ecommerce`   RIGHT JOIN `kibana_sample_data_flights` ON (`kibana_sample_data_ecommerce`.`day_of_week_i` = `kibana_sample_data_flights`.`dayOfWeek`) LIMIT 1000"
    },
    {
      "result": "Success",
      "id": 99,
      "sql": "SELECT `kibana_sample_data_flights`.`OriginCityName` AS `OriginCityName` FROM `kibana_sample_data_flights` GROUP BY 1 ORDER BY `OriginCityName` ASC"
    },
    {
      "result": "Success",
      "id": 100,
      "sql": "SELECT `kibana_sample_data_flights`.`OriginCityName` AS `OriginCityName` FROM `kibana_sample_data_flights` GROUP BY 1 ORDER BY `OriginCityName` ASC"
    },
    {
      "result": "Success",
      "id": 101,
      "sql": "SELECT `kibana_sample_data_flights`.`DestCityName` AS `DestCityName`,   SUM(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `$__alias__0` FROM `kibana_sample_data_flights` GROUP BY 1 ORDER BY `$__alias__0` DESC,   `DestCityName` ASC LIMIT 10"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field ['DESKTOP-7APIVOE\\\\\\\\\\\\\\\\Rupal'] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 102,
      "sql": "SELECT 'DESKTOP-7APIVOE\\\\\\\\Rupal' AS `Calculation_1122522251639717888` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "Calculation_1122522251639717888",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CALCULATION_1122522251639717888",
              "type": "INTEGER"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 103,
      "sql": "SELECT 0 AS `Calculation_1122522251639717888` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "Calculation_1122522251639717888",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CALCULATION_1122522251639717888",
              "type": "INTEGER"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 104,
      "sql": "SELECT 0 AS `Calculation_1122522251639717888` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "Calculation_1122522251639717888",
              "type": "double"
            }],
            "dataRows": [[1]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CALCULATION_1122522251639717888",
              "type": "INTEGER"
            }],
            "dataRows": [[1]]
          }
        }
      ],
      "id": 105,
      "sql": "SELECT 1 AS `Calculation_1122522251639717888` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field ['DESKTOP-7APIVOE'] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 106,
      "sql": "SELECT 'DESKTOP-7APIVOE' AS `Calculation_1122522251639717888` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field ['ABC'] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 107,
      "sql": "SELECT 'ABC' AS `Calculation_1122522251639717888` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MAX(AvgTicketPrice)",
      "id": 108,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TC_)(3575797393)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 109,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(TEMP(TC_)(4001152001)(0))(105357904)(0)`,   COUNT(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(TEMP(TC_)(4001152001)(0))(2584840543)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MIN(AvgTicketPrice)",
      "id": 110,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TC_)(2076389572)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(AvgTicketPrice)",
      "id": 111,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TEMP(TC_)(4079199159)(0))(2465277995)(0)`,   COUNT(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TEMP(TC_)(4079199159)(0))(2633997250)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(AvgTicketPrice)",
      "id": 112,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TC_)(2465277995)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method COUNT(AvgTicketPrice)",
      "id": 113,
      "sql": "SELECT COUNT(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TC_)(2633997250)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MAX(dayOfWeek)",
      "id": 114,
      "sql": "SELECT MAX(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(TC_)(718966039)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method MIN(dayOfWeek)",
      "id": 115,
      "sql": "SELECT MIN(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(TC_)(2462140059)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SqlParseException. Details: can define this method SUM(dayOfWeek)",
      "id": 116,
      "sql": "SELECT SUM(`kibana_sample_data_flights`.`dayOfWeek`) AS `TEMP(TC_)(105357904)(0)`,   SUM(`kibana_sample_data_flights`.`AvgTicketPrice`) AS `TEMP(TC_)(2465277995)(0)` FROM `kibana_sample_data_flights` GROUP BY 1"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "empty",
              "type": "double"
            }],
            "dataRows": [[1]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "EMPTY",
              "type": "INTEGER"
            }],
            "dataRows": [[1]]
          }
        }
      ],
      "id": 117,
      "sql": "SELECT 1 AS `empty` FROM `kibana_sample_data_flights`"
    },
    {
      "result": "Success",
      "id": 118,
      "sql": "SELECT substring(OriginWeather, 1, 2) AS OriginWeather FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "sum_FlightDelayMin_ok",
              "type": "double"
            }],
            "dataRows": [[180]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "SUM_FLIGHTDELAYMIN_OK",
              "type": "BIGINT"
            }],
            "dataRows": [[180]]
          }
        }
      ],
      "id": 119,
      "sql": "SELECT SUM(FlightDelayMin) AS sum_FlightDelayMin_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [SUM] cannot work with [BOOLEAN]. Usage: SUM(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 120,
      "sql": "SELECT SUM(FlightDelay) AS sum_FlightDelay_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 121,
      "sql": "SELECT SUM(DistanceMiles) AS sum_DistanceMiles_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "yr_timestamp_ok",
              "type": "text"
            }],
            "dataRows": [["2019"]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "YR_TIMESTAMP_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[2019]]
          }
        }
      ],
      "id": 122,
      "sql": "SELECT year(timestamp) AS yr_timestamp_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 123,
      "sql": "SELECT abs(AvgTicketPrice) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 500. Message: Internal Server Error. Raw response received: JSON does not allow non-finite numbers.",
      "id": 124,
      "sql": "SELECT acos(FlightDelayMin) AS sum_Calculation_160722252358221825_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 500. Message: Internal Server Error. Raw response received: JSON does not allow non-finite numbers.",
      "id": 125,
      "sql": "SELECT asin(FlightDelayMin) AS sum_Calculation_160722252358545410_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 126,
      "sql": "SELECT atan(FlightDelayMin) AS sum_Calculation_160722252358811651_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 127,
      "sql": "SELECT atan2(FlightDelayMin,dayOfWeek) AS sum_Calculation_160722252358811651_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "sum_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[180]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "SUM_CALCULATION_160722252357632000_OK",
              "type": "BIGINT"
            }],
            "dataRows": [[180]]
          }
        }
      ],
      "id": 128,
      "sql": "SELECT SUM(FlightDelayMin) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 129,
      "sql": "SELECT cos(FlightDelayMin) AS sum_Calculation_160722252358221825_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 130,
      "sql": "SELECT cot(AvgTicketPrice) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 131,
      "sql": "SELECT degrees(FlightDelayMin) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Illegal SQL expression : SELECT FlightDelayMin div AvgTicketPrice AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights\",\n    \"type\": \"ParserException\"\n  },\n  \"status\": 400\n}",
      "id": 132,
      "sql": "SELECT FlightDelayMin div AvgTicketPrice AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 133,
      "sql": "SELECT exp(FlightDelayMin) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "sum_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "SUM_CALCULATION_160722252357632000_OK",
              "type": "BIGINT"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 134,
      "sql": "SELECT SUM(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [ROUND] cannot work with [FLOAT, INTEGER]. Usage: ROUND(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 135,
      "sql": "SELECT SUM((((CASE WHEN (ABS((AvgTicketPrice) - (ROUND( ( (AvgTicketPrice) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((FlightDelayMin) - (ROUND( ( (FlightDelayMin) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN 1.5 ELSE 0.0 END) - (CASE WHEN ((FlightDelayMin) - (ROUND( ( (FlightDelayMin) / 3.0 ), 0 ) * 3.0) < 0.0) AND ((CASE WHEN (ABS((AvgTicketPrice) - (ROUND( ( (AvgTicketPrice) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((FlightDelayMin) - (ROUND( ( (FlightDelayMin) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) > 0.0) THEN 3.0 ELSE 0.0 END)) + (ROUND( ( (FlightDelayMin) / 3.0 ), 0 ) * 3.0))) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [ROUND] cannot work with [FLOAT, INTEGER]. Usage: ROUND(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 136,
      "sql": "SELECT SUM(ROUND( (((CASE WHEN (ABS((AvgTicketPrice) - (ROUND( ( (AvgTicketPrice) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((FlightDelayMin) - (ROUND( ( (FlightDelayMin) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) - (CASE WHEN ((AvgTicketPrice) - (ROUND( ( (AvgTicketPrice) / SQRT(3.0) ), 0 ) * SQRT(3.0)) < 0.0) AND ((CASE WHEN (ABS((AvgTicketPrice) - (ROUND( ( (AvgTicketPrice) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((FlightDelayMin) - (ROUND( ( (FlightDelayMin) / 3.0 ), 0 ) * 3.0))) - 1.0) > 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) > 0.0) THEN SQRT(3.0) ELSE 0.0 END)) + (ROUND( ( (AvgTicketPrice) / SQRT(3.0) ), 0 ) * SQRT(3.0))), 3)) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 500. Message: Internal Server Error. Raw response received: JSON does not allow non-finite numbers.",
      "id": 137,
      "sql": "SELECT log(FlightDelayMin) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 500. Message: Internal Server Error. Raw response received: JSON does not allow non-finite numbers.",
      "id": 138,
      "sql": "SELECT (log(FlightDelayMin)/log(10)) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "usr_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[180]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "USR_CALCULATION_160722252357632000_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[180]]
          }
        }
      ],
      "id": 139,
      "sql": "SELECT MAX(FlightDelayMin) AS usr_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "usr_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "USR_CALCULATION_160722252357632000_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 140,
      "sql": "SELECT MIN(FlightDelayMin) AS usr_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"could not parse sqlBinaryOpExpr need to be identifier/valuable gotclass com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr with value:power(dayOfWeek, 2)\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 141,
      "sql": "SELECT sum((case when dayOfWeek >= 0 or floor(2) = 2 then power(dayOfWeek,2) end)) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 142,
      "sql": "SELECT radians(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "sum_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "SUM_CALCULATION_160722252357632000_OK",
              "type": "DECIMAL"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 143,
      "sql": "SELECT round(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "sum_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "SUM_CALCULATION_160722252357632000_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 144,
      "sql": "SELECT sign(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 145,
      "sql": "SELECT sin(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 146,
      "sql": "SELECT sqrt(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 147,
      "sql": "SELECT power(dayOfWeek, 2) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 148,
      "sql": "SELECT tan(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "sum_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "SUM_CALCULATION_160722252357632000_OK",
              "type": "BIGINT"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 149,
      "sql": "SELECT SUM(dayOfWeek) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 150,
      "sql": "SELECT ascii(substring(OriginWeather, 1, 5)) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [
              {
                "name": "Dest",
                "type": "keyword"
              },
              {
                "name": "locate('air', Dest)",
                "type": "integer"
              }
            ],
            "dataRows": [
              [
                "Venice Marco Polo Airport",
                0
              ],
              [
                "Sydney Kingsford Smith International Airport",
                0
              ],
              [
                "Xi'an Xianyang International Airport",
                0
              ],
              [
                "Treviso-Sant'Angelo Airport",
                0
              ]
            ]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [
              {
                "name": "LOCATE('air', DEST)",
                "type": "INTEGER"
              },
              {
                "name": "DEST",
                "type": "VARCHAR"
              }
            ],
            "dataRows": [
              [
                "Sydney Kingsford Smith International Airport",
                0
              ],
              [
                "Venice Marco Polo Airport",
                0
              ],
              [
                "Xi'an Xianyang International Airport",
                0
              ],
              [
                "Treviso-Sant'Angelo Airport",
                0
              ]
            ]
          }
        }
      ],
      "id": 151,
      "sql": "SELECT Dest, locate('air',Dest) FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 152,
      "sql": "SELECT substring(OriginWeather, 1, 1024) AS OriginWeather FROM kibana_sample_data_flights WHERE (right(rtrim(lower(substring(OriginWeather, 1, 5))), length('.')) ='.')"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [GREATEST] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 153,
      "sql": "SELECT sum(if(isnull(1), null, locate('Cape',Origin,greatest(1,floor(1))))) AS sum_Calculation_462181953493630977_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"could not parse sqlBinaryOpExpr need to be identifier/valuable gotclass com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr with value:LEFT(Origin, 3)\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 154,
      "sql": "SELECT (case when 3 >= 0 then left(Origin,3) else null end) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "Calculation_462181953493630977",
              "type": "integer"
            }],
            "dataRows": [
              [25],
              [28],
              [46],
              [31]
            ]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CALCULATION_462181953493630977",
              "type": "BIGINT"
            }],
            "dataRows": [
              [25],
              [28],
              [46],
              [31]
            ]
          }
        }
      ],
      "id": 155,
      "sql": "SELECT length(Origin) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 156,
      "sql": "SELECT lower(Origin) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 157,
      "sql": "SELECT ltrim(Origin) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MAX] cannot work with [KEYWORD]. Usage: MAX(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 158,
      "sql": "SELECT max(Origin) AS usr_Calculation_462181953493630977_nk FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [GREATEST] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 159,
      "sql": "SELECT if(isnull(0), null, substring(Origin,greatest(1,floor(0)),floor(5))) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MIN] cannot work with [KEYWORD]. Usage: MIN(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 160,
      "sql": "SELECT min(Origin) AS usr_Calculation_462181953493630977_nk FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 161,
      "sql": "SELECT replace(Origin,'Airport','') AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"could not parse sqlBinaryOpExpr need to be identifier/valuable gotclass com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr with value:RIGHT(Origin, 3)\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 162,
      "sql": "SELECT (case when 3 >= 0 then right(Origin,3) else null end) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 163,
      "sql": "SELECT rtrim(Origin) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [SPACE] cannot be found or used here. Did you mean [REPLACE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 164,
      "sql": "SELECT if(AvgTicketPrice >= 0, space(floor(AvgTicketPrice)), null) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol ['-'] at: 'SELECT trim(leading '-'' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 165,
      "sql": "SELECT trim(leading '-' FROM trim(leading substring(Origin, '-', (2 - 1)) FROM substring_index(Origin, '-', 2))) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 166,
      "sql": "SELECT substring(OriginWeather, 1, 5) AS OriginWeather FROM kibana_sample_data_flights where (left(ltrim(lower(substring(OriginWeather, 1, 5))), length('$')) = '$')"
    },
    {
      "result": "Success",
      "id": 167,
      "sql": "SELECT trim(Origin) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 168,
      "sql": "SELECT upper(Origin) AS Calculation_462181953493630977 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [0] at: 'SELECT adddate( date_format( date(timestamp), '%Y-01-01 00:00:00' ), interval 0' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 169,
      "sql": "SELECT adddate( date_format( date(timestamp), '%Y-01-01 00:00:00' ), interval 0 second ) AS tyr_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 170,
      "sql": "SELECT year(date(timestamp)) AS yr_Calculation_462181953481519104_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [STR_TO_DATE] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 171,
      "sql": "SELECT year(timestamp(str_to_date('5.April.2004', '%d.%i.%Y'))) AS yr_Calculation_462181953481519104_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "Calculation_462181953481519104",
              "type": "text"
            }],
            "dataRows": [["9"]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CALCULATION_462181953481519104",
              "type": "INTEGER"
            }],
            "dataRows": [[9]]
          }
        }
      ],
      "id": 172,
      "sql": "SELECT dayofmonth(timestamp) AS Calculation_462181953481519104 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "yr_Calculation_462181953481519104_ok",
              "type": "double"
            }],
            "dataRows": [[2019]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "YR_CALCULATION_462181953481519104_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[2019]]
          }
        }
      ],
      "id": 173,
      "sql": "SELECT 2019 AS yr_Calculation_462181953481519104_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MAX] cannot work with [DATE]. Usage: MAX(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 174,
      "sql": "SELECT max(timestamp) AS max_timestamp_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [MIN] cannot work with [DATE]. Usage: MIN(NUMBER T) -> T\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 175,
      "sql": "SELECT min(timestamp) AS max_timestamp_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "mn_timestamp_ok",
              "type": "text"
            }],
            "dataRows": [["12"]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "MN_TIMESTAMP_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[12]]
          }
        }
      ],
      "id": 176,
      "sql": "SELECT month(timestamp) AS mn_timestamp_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 177,
      "sql": "SELECT year(now()) AS yr_Calculation_462181953481519104_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 178,
      "sql": "SELECT year(curdate()) AS yr_Calculation_462181953481519104_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "yr_timestamp_ok",
              "type": "text"
            }],
            "dataRows": [["2019"]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "YR_TIMESTAMP_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[2019]]
          }
        }
      ],
      "id": 179,
      "sql": "SELECT year(timestamp) AS yr_timestamp_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"AND is not support\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 180,
      "sql": "SELECT ((Origin = 'Frankfurt am Main Airport') and (Dest = 'Sydney Kingsford Smith International Airport')) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 181,
      "sql": "SELECT (case OriginWeather when 'Sunny' then '1' when 'Rain' then '0' else 'NA' end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [char] at: 'SELECT (case when (FlightDelay = 0) then 'No delay' else cast(null as char' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 182,
      "sql": "SELECT (case when (FlightDelay = 0) then 'No delay' else cast(null as char(1)) end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [char] at: 'SELECT (case when (FlightDelay = 0) then 'No delay' when (FlightDelay = 1) then 'Delay' else cast(null as char' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 183,
      "sql": "SELECT (case when (FlightDelay = 0) then 'No delay' when (FlightDelay = 1) then 'Delay' else cast(null as char(1)) end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"= is not support\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 184,
      "sql": "SELECT (right(rtrim(Origin), length('Airport')) = 'Airport') AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [char] at: 'SELECT (case when (FlightDelay = 0) then 'No delay' else cast(null as char' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 185,
      "sql": "SELECT (case when (FlightDelay = 0) then 'No delay' else cast(null as char(1)) end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: Internal Server Error. Reason: There was internal problem at backend. Type: SearchPhaseExecutionException. Details: all shards failed",
      "id": 186,
      "sql": "SELECT ifnull(Cancelled, AvgTicketPrice) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 187,
      "sql": "SELECT (case when (AvgTicketPrice > 500) THEN 'High' when not (AvgTicketPrice > 500) then 'Low' else null end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"unknown field name :  NOT isnull(date_format(Origin, '%Y'))\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 188,
      "sql": "SELECT (not isnull(date_format(Origin, '%Y'))) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Invalid parameter count for \"ISNULL\", expected count: \"1\"; SQL statement:\nSELECT isnull(FlightNum) AS Calculation_462181953506873347 FROM kibana_sample_data_flights [7001-200];[SQLITE_ERROR] SQL error or missing database (near \"isnull\": syntax error);",
      "id": 189,
      "sql": "SELECT isnull(FlightNum) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 190,
      "sql": "SELECT MAX(AvgTicketPrice) AS max_AvgTicketPrice_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 191,
      "sql": "SELECT MIN(AvgTicketPrice) AS min_AvgTicketPrice_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"unknown field name :  NOT isnull(date_format(Origin, '%Y'))\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 192,
      "sql": "SELECT (not isnull(date_format(Origin, '%Y'))) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"OR is not support\",\n    \"type\": \"SqlParseException\"\n  },\n  \"status\": 400\n}",
      "id": 193,
      "sql": "SELECT ((Origin = 'Frankfurt am Main Airport') or (Dest = 'Sydney Kingsford Smith International Airport')) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 194,
      "sql": "SELECT (case when (AvgTicketPrice > 500) THEN 'High' when not (AvgTicketPrice > 500) then 'Low' else null end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 195,
      "sql": "SELECT (case when (AvgTicketPrice > 500) THEN 'High' when not (AvgTicketPrice > 500) then 'Low' else null end) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "Calculation_462181953506873347",
              "type": "keyword"
            }],
            "dataRows": [
              ["false"],
              ["true"]
            ]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CALCULATION_462181953506873347",
              "type": "INTEGER"
            }],
            "dataRows": [
              [0],
              [1]
            ]
          }
        }
      ],
      "id": 196,
      "sql": "SELECT ifnull(FlightDelay, 0) AS Calculation_462181953506873347 FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [(] at: 'SELECT min(Origin) AS temp(' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 197,
      "sql": "SELECT min(Origin) AS temp(Calculation_462181953504628738)(2376748618)(0), max(Origin) AS temp(Calculation_462181953504628738)(2968235173)(0) FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "avg_dayOfWeek_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "AVG_DAYOFWEEK_OK",
              "type": "INTEGER"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 198,
      "sql": "SELECT AVG(dayOfWeek) AS avg_dayOfWeek_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "cnt_dayOfWeek_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "CNT_DAYOFWEEK_OK",
              "type": "BIGINT"
            }],
            "dataRows": [[5]]
          }
        }
      ],
      "id": 199,
      "sql": "SELECT SUM(1) AS cnt_dayOfWeek_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 200,
      "sql": "SELECT COUNT(DISTINCT AvgTicketPrice) AS ctd_AvgTicketPrice_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 201,
      "sql": "SELECT MAX(AvgTicketPrice) AS max_AvgTicketPrice_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 202,
      "sql": "SELECT MIN(AvgTicketPrice) AS min_AvgTicketPrice_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [(] at: 'SELECT sum((AvgTicketPrice * AvgTicketPrice)) AS temp(' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 203,
      "sql": "SELECT sum((AvgTicketPrice * AvgTicketPrice)) AS temp(Calculation_462181953506873347)(1705728846)(0),   sum(AvgTicketPrice) AS temp(Calculation_462181953506873347)(2465277995)(0),   count(AvgTicketPrice) AS temp(Calculation_462181953506873347)(2633997250)(0) FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Failed to parse query due to offending symbol [(] at: 'SELECT count(DistanceMiles) AS temp(' <--- HERE... More details: Expecting tokens in {'SELECT', '('}\",\n    \"type\": \"SyntaxAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 204,
      "sql": "SELECT count(DistanceMiles) AS temp(Calculation_462181953506873347)(2070533874)(0),   sum(DistanceMiles) AS temp(Calculation_462181953506873347)(3496560911)(0),   sum((DistanceMiles * DistanceMiles)) AS temp(Calculation_462181953506873347)(3595387140)(0) FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "usr_Calculation_160722252357632000_ok",
              "type": "double"
            }],
            "dataRows": [[0]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "USR_CALCULATION_160722252357632000_OK",
              "type": "BIGINT"
            }],
            "dataRows": [[0]]
          }
        }
      ],
      "id": 205,
      "sql": "SELECT SUM(dayOfWeek) AS usr_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Success",
      "id": 206,
      "sql": "SELECT substring(OriginWeather, 1, 5) AS OriginWeather FROM kibana_sample_data_flights WHERE (substring(OriginWeather, 1, 5) = 'ABC')"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Function [GREATEST] cannot be found or used here. Did you mean [CURDATE]?\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 207,
      "sql": "SELECT sum((case when isnull(FlightDelayMin) then null when isnull(10) then null else greatest(FlightDelayMin, 10) end)) AS sum_Calculation_160722252357632000_ok FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field [DestLocation] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 208,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice,   Cancelled AS Cancelled,   Carrier AS Carrier,   DestAirportID AS DestAirportID,   DestCityName AS DestCityName,   DestCountry AS DestCountry,   DestLocation AS DestLocation   FROM kibana_sample_data_ecommerce   INNER JOIN kibana_sample_data_flights ON (kibana_sample_data_ecommerce.day_of_week_i = dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field [kibana_sample_data_ecommerce.day_of_week_i] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 209,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice,   Cancelled AS Cancelled,   Carrier AS Carrier,   DestAirportID AS DestAirportID,   DestCityName AS DestCityName,   DestCountry AS DestCountry,   DestLocation AS DestLocation FROM kibana_sample_data_ecommerce   LEFT JOIN kibana_sample_data_flights ON (kibana_sample_data_ecommerce.day_of_week_i = dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field [kibana_sample_data_ecommerce.day_of_week_i] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 210,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice,   Cancelled AS Cancelled,   Carrier AS Carrier,   DestAirportID AS DestAirportID,   DestCityName AS DestCityName,   DestCountry AS DestCountry,   DestLocation AS DestLocation FROM kibana_sample_data_ecommerce   RIGHT JOIN kibana_sample_data_flights ON (kibana_sample_data_ecommerce.day_of_week_i = dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Success",
      "id": 211,
      "sql": "SELECT OriginCityName FROM kibana_sample_data_flights ORDER BY OriginCityName ASC"
    },
    {
      "result": "Success",
      "id": 212,
      "sql": "SELECT OriginCityName FROM kibana_sample_data_flights ORDER BY OriginCityName DESC"
    },
    {
      "result": "Failed",
      "reason": "No other databases support this query: Syntax error in SQL statement \"SELECT DESTCITYNAME,  SUM(AVGTICKETPRICE) AS $[*]__ALIAS__0 FROM KIBANA_SAMPLE_DATA_FLIGHTS ORDER BY $__ALIAS__0 DESC,  DESTCITYNAME ASC LIMIT 10\"; expected \"identifier\"; SQL statement:\nSELECT DestCityName,  SUM(AvgTicketPrice) AS $__alias__0 FROM kibana_sample_data_flights ORDER BY $__alias__0 DESC,  DestCityName ASC LIMIT 10 [42001-200];[SQLITE_ERROR] SQL error or missing database (near \"$__alias__0\": syntax error);",
      "id": 213,
      "sql": "SELECT DestCityName,  SUM(AvgTicketPrice) AS $__alias__0 FROM kibana_sample_data_flights ORDER BY $__alias__0 DESC,  DestCityName ASC LIMIT 10"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [
              {
                "name": "kibana_sample_data_flights_1.AvgTicketPrice",
                "type": "float"
              },
              {
                "name": "kibana_sample_data_flights_1.Cancelled",
                "type": "boolean"
              },
              {
                "name": "kibana_sample_data_flights_1.Carrier",
                "type": "keyword"
              }
            ],
            "dataRows": [
              [
                730.05,
                false,
                "Kibana Airlines"
              ],
              [
                190.64,
                false,
                "Logstash Airways"
              ],
              [
                181.7,
                true,
                "Kibana Airlines"
              ],
              [
                882.99,
                false,
                "Logstash Airways"
              ],
              [
                841.27,
                false,
                "Kibana Airlines"
              ]
            ]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [
              {
                "name": "CANCELLED",
                "type": "BOOLEAN"
              },
              {
                "name": "AVGTICKETPRICE",
                "type": "DOUBLE"
              },
              {
                "name": "CARRIER",
                "type": "VARCHAR"
              }
            ],
            "dataRows": [
              [
                841.27,
                false,
                "Kibana Airlines"
              ],
              [
                181.7,
                true,
                "Kibana Airlines"
              ],
              [
                882.99,
                false,
                "Logstash Airways"
              ],
              [
                190.64,
                false,
                "Logstash Airways"
              ],
              [
                730.05,
                false,
                "Kibana Airlines"
              ]
            ]
          }
        }
      ],
      "id": 214,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice,   Cancelled AS Cancelled,   Carrier AS Carrier FROM kibana_sample_data_ecommerce   INNER JOIN kibana_sample_data_flights ON (kibana_sample_data_ecommerce.day_of_week_i = dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field [kibana_sample_data_ecommerce.day_of_week_i] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 215,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice,   Cancelled AS Cancelled,   Carrier AS Carrier FROM kibana_sample_data_ecommerce   LEFT JOIN kibana_sample_data_flights ON (kibana_sample_data_ecommerce.day_of_week_i = dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Failed",
      "reason": "IllegalStateException: HTTP Code: 400. Message: Bad Request. Raw response received: {\n  \"error\": {\n    \"reason\": \"Invalid SQL query\",\n    \"details\": \"Field [kibana_sample_data_ecommerce.day_of_week_i] cannot be found or used here.\",\n    \"type\": \"SemanticAnalysisException\"\n  },\n  \"status\": 400\n}",
      "id": 216,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice,   Cancelled AS Cancelled,   Carrier AS Carrier FROM kibana_sample_data_ecommerce   RIGHT JOIN kibana_sample_data_flights ON (kibana_sample_data_ecommerce.day_of_week_i = dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Success",
      "id": 217,
      "sql": "SELECT timestamp FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [{
              "name": "YEAR(timestamp)",
              "type": "text"
            }],
            "dataRows": [["2019"]]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [{
              "name": "YEAR(TIMESTAMP)",
              "type": "INTEGER"
            }],
            "dataRows": [[2019]]
          }
        }
      ],
      "id": 218,
      "sql": "SELECT YEAR(timestamp) FROM kibana_sample_data_flights"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [
              {
                "name": "f.DestCountry",
                "type": "keyword"
              },
              {
                "name": "f.AvgTicketPrice",
                "type": "float"
              }
            ],
            "dataRows": [
              [
                730.05,
                "CN"
              ],
              [
                190.64,
                "IT"
              ],
              [
                882.99,
                "IT"
              ],
              [
                181.7,
                "IT"
              ],
              [
                841.27,
                "AU"
              ]
            ]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [
              {
                "name": "AVGTICKETPRICE",
                "type": "DOUBLE"
              },
              {
                "name": "DESTCOUNTRY",
                "type": "VARCHAR"
              }
            ],
            "dataRows": [
              [
                882.99,
                "IT"
              ],
              [
                181.7,
                "IT"
              ],
              [
                190.64,
                "IT"
              ],
              [
                730.05,
                "CN"
              ],
              [
                841.27,
                "AU"
              ]
            ]
          }
        }
      ],
      "id": 219,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice, DestCountry AS DestCountry FROM kibana_sample_data_ecommerce e JOIN kibana_sample_data_flights f ON (e.day_of_week_i = f.dayOfWeek) LIMIT 1000"
    },
    {
      "result": "Failed",
      "resultSets": [
        {
          "database": "Elasticsearch",
          "resultSet": {
            "schema": [
              {
                "name": "f.DestCountry",
                "type": "keyword"
              },
              {
                "name": "f.AvgTicketPrice",
                "type": "float"
              }
            ],
            "dataRows": [
              [
                0,
                null
              ],
              [
                730.05,
                "CN"
              ],
              [
                190.64,
                "IT"
              ],
              [
                882.99,
                "IT"
              ],
              [
                181.7,
                "IT"
              ],
              [
                841.27,
                "AU"
              ]
            ]
          }
        },
        {
          "database": "H2",
          "resultSet": {
            "schema": [
              {
                "name": "AVGTICKETPRICE",
                "type": "DOUBLE"
              },
              {
                "name": "DESTCOUNTRY",
                "type": "VARCHAR"
              }
            ],
            "dataRows": [
              [
                null,
                null
              ],
              [
                882.99,
                "IT"
              ],
              [
                181.7,
                "IT"
              ],
              [
                190.64,
                "IT"
              ],
              [
                730.05,
                "CN"
              ],
              [
                841.27,
                "AU"
              ]
            ]
          }
        }
      ],
      "id": 220,
      "sql": "SELECT AvgTicketPrice AS AvgTicketPrice, DestCountry AS DestCountry FROM kibana_sample_data_ecommerce e LEFT JOIN kibana_sample_data_flights f ON (e.day_of_week_i = f.dayOfWeek) LIMIT 1000"
    }
  ]
}